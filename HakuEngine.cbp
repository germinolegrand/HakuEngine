<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="HakuEngine" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Build>
			<Target title="W Debug">
				<Option platforms="Windows;" />
				<Option output="bin/Debug/HakuEngine" prefix_auto="1" extension_auto="1" />
				<Option working_dir="executive" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-g" />
					<Add directory="SFML/include" />
				</Compiler>
				<Linker>
					<Add library="sfml-system-d" />
					<Add library="sfml-network-d" />
					<Add directory="SFML/lib" />
				</Linker>
			</Target>
			<Target title="W Release">
				<Option platforms="Windows;" />
				<Option output="bin/Release/HakuEngine" prefix_auto="1" extension_auto="1" />
				<Option working_dir="executive" />
				<Option object_output="obj/Release/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
					<Add directory="SFML/include" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add library="sfml-system" />
					<Add library="sfml-network" />
					<Add directory="SFML/lib" />
				</Linker>
			</Target>
			<Target title="L Debug">
				<Option platforms="Unix;" />
				<Option output="bin/Debug/HakuEngine" prefix_auto="1" extension_auto="1" />
				<Option working_dir="executive" />
				<Option object_output="obj/Debug/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-g" />
					<Add directory="SFML/include" />
					<Add directory="/usr/include/pqxx" />
				</Compiler>
				<Linker>
					<Add option="-lsfml-system" />
					<Add option="-lsfml-network" />
					<Add option="-lpqxx" />
					<Add directory="SFML/lib" />
				</Linker>
			</Target>
			<Target title="L Release">
				<Option platforms="Unix;" />
				<Option output="bin/Release/HakuEngine" prefix_auto="1" extension_auto="1" />
				<Option working_dir="executive" />
				<Option object_output="obj/Release/" />
				<Option type="1" />
				<Option compiler="gcc" />
				<Compiler>
					<Add option="-O2" />
					<Add directory="SFML/include" />
					<Add directory="/usr/include/pqxx" />
				</Compiler>
				<Linker>
					<Add option="-s" />
					<Add option="-lsfml-system" />
					<Add option="-lsfml-network" />
					<Add directory="SFML/lib" />
				</Linker>
			</Target>
		</Build>
		<Compiler>
			<Add option="-std=c++11" />
			<Add option="-Wall" />
			<Add option="-fexceptions" />
			<Add option="-std=c99" />
			<Add option="-DSFML_DYNAMIC" />
		</Compiler>
		<Unit filename="AnalyseResource.cpp" />
		<Unit filename="AnalyseResource.h" />
		<Unit filename="DownloadResource.cpp" />
		<Unit filename="DownloadResource.h" />
		<Unit filename="PersistResults.cpp" />
		<Unit filename="PersistResults.h" />
		<Unit filename="gumbo-parser-master/src/attribute.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="gumbo-parser-master/src/attribute.h" />
		<Unit filename="gumbo-parser-master/src/char_ref.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="gumbo-parser-master/src/char_ref.h" />
		<Unit filename="gumbo-parser-master/src/error.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="gumbo-parser-master/src/error.h" />
		<Unit filename="gumbo-parser-master/src/gumbo.h" />
		<Unit filename="gumbo-parser-master/src/insertion_mode.h" />
		<Unit filename="gumbo-parser-master/src/parser.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="gumbo-parser-master/src/parser.h" />
		<Unit filename="gumbo-parser-master/src/string_buffer.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="gumbo-parser-master/src/string_buffer.h" />
		<Unit filename="gumbo-parser-master/src/string_piece.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="gumbo-parser-master/src/string_piece.h" />
		<Unit filename="gumbo-parser-master/src/tag.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="gumbo-parser-master/src/token_type.h" />
		<Unit filename="gumbo-parser-master/src/tokenizer.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="gumbo-parser-master/src/tokenizer.h" />
		<Unit filename="gumbo-parser-master/src/tokenizer_states.h" />
		<Unit filename="gumbo-parser-master/src/utf8.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="gumbo-parser-master/src/utf8.h" />
		<Unit filename="gumbo-parser-master/src/util.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="gumbo-parser-master/src/util.h" />
		<Unit filename="gumbo-parser-master/src/vector.c">
			<Option compilerVar="CC" />
		</Unit>
		<Unit filename="gumbo-parser-master/src/vector.h" />
		<Unit filename="main.cpp" />
		<Unit filename="utils.h" />
		<Extensions>
			<code_completion />
			<envvars />
			<debugger />
			<lib_finder disable_auto="1" />
		</Extensions>
	</Project>
</CodeBlocks_project_file>
